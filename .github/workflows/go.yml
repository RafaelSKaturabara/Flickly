# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'

    - name: Install golangci-lint
      run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

    - name: Run golangci-lint
      run: golangci-lint run ./...

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'

    - name: Run unit tests
      run: go test -v -short ./...

    - name: Upload test coverage
      uses: actions/upload-artifact@v4
      with:
        name: unit-test-coverage
        path: coverage.out
        if-no-files-found: ignore

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'

    - name: Set up Docker Compose
      uses: docker/setup-buildx-action@v3

    - name: Run integration tests
      run: |
        # Tente executar com Docker Compose primeiro
        docker-compose -f docker-compose.test.yml up --build --exit-code-from app || \
        # Se falhar, execute diretamente (útil para diagnóstico)
        go test -v ./internal/integration_tests
      env:
        # Adicionar variáveis de ambiente necessárias para os testes
        GO_ENV: test

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint, unit-tests, integration-tests]
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'

    - name: Build
      run: go build -v ./...

    - name: Archive production artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: |
          *
          !.git
          !.github
